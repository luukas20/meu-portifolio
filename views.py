from main import app
from flask import render_template, request, jsonify
from dotenv import load_dotenv
import os
from google import genai

# Rotas
@app.route('/', endpoint='pagina_home')
def homepage():
    return render_template("homepage.html")

# 1. CONFIGURA√á√ÉO INICIAL
load_dotenv() # Carrega as vari√°veis do arquivo .env

# 2. CONFIGURA√á√ÉO DA API DO GEMINI
client = genai.Client(api_key=os.getenv("GEMINI_API_KEY"))
# genai.configure(api_key=os.getenv("GEMINI_API_KEY"))
# model = genai.GenerativeModel('gemini-1.5-flash')

# 3. Define os dados do LinkedIn
dados_linkedin = """
## RESUMO PROFISSIONAL DE LUCAS
Profissional altamente motivado e apaixonado por Ci√™ncia de Dados, Machine Learning e An√°lise Estat√≠stica, com forma√ß√£o em Estat√≠stica pela UFS. Atualmente, atuo como Analista Estrat√©gia de Risco de Cr√©dito na Cencosud, onde aplico t√©cnicas avan√ßadas de modelagem estat√≠stica e an√°lise preditiva para otimizar decis√µes financeiras e mitigar riscos.
Minhas experi√™ncias abrangem o desenvolvimento de solu√ß√µes inovadoras por meio de algoritmos de Machine Learning, utilizando as linguagens Python e R, al√©m de um dom√≠nio s√≥lido em SQL Server e Power BI para transformar dados complexos em insights estrat√©gicos, visualiza√ß√µes claras e impactantes.

## EXPERI√äNCIA PROFISSIONAL
1.	Cencosud
Analista Estrat√©gia de Risco PL. - abr/2025 - atualmente
‚Ä¢	Adequa√ß√£o a CMN 4966/21
‚Ä¢	Modelagem da Probability of Default - PD
‚Ä¢	Modelagem da Loss Given Default - LGD
‚Ä¢	Modelagem da Exposure At Default - EAD
‚Ä¢	Modelagem da Provis√£o da Perda Esperada utilizando PD, LGD e EAD
‚Ä¢	Avalia√ß√£o de Modelos Credit Score de Empresas Especializadas
‚Ä¢	C√°lculo de Indicadores de Inadimpl√™ncia 
‚Ä¢	Constru√ß√£o de Dashboard no Power BI 
‚Ä¢	Gerenciamento do Power BI Service
Analista Estrat√©gia de Risco Jr. - jan/2024 - abr/2025
‚Ä¢	Constru√ß√£o do Modelo Behaviour Score para Risco de Cr√©dito
‚Ä¢	Gerenciamento do Data Warehouse em SQL Server e MySQL
‚Ä¢	C√°lculo de Indicadores de Inadimpl√™ncia 
‚Ä¢	Provis√£o da Perda Esperada ao Risco de Cr√©dito
‚Ä¢	Constru√ß√£o de Dashboard no Power BI 
‚Ä¢	Gerenciamento do Power BI Service

2.	Hospital Primavera
Estagi√°rio de Analista de Business Intelligence - abr/2023 - dez/2023 
‚Ä¢	Cria√ß√£o de Consultas em Oracle SQL, SQL Server, MySQL
‚Ä¢	Automatiza√ß√£o de Indicadores do Interact Direto dos Bancos de Dados
‚Ä¢	Constru√ß√£o de Dashboard no Power BI e Gerenciamento do Power BI Service
‚Ä¢	Automa√ß√£o de Tarefas via Power Automate

3.	Tribunal Regional Eleitoral - TRE 
Estagi√°rio de Estat√≠stica - fev/2022 - mar/2023 
‚Ä¢	Gerenciamento dos Indicadores Estrat√©gicos do TRE-SE
‚Ä¢	Gerenciamento das Metas do CNJ
‚Ä¢	Gerenciamento dos Indicadores Plano de Log√≠stica Sustent√°vel do TRE-SE
‚Ä¢	Shiny App para Apura√ß√£o de Votos em Tempo Real direto da API do TSE


## FORMA√á√ÉO ACAD√äMICA
Universidade Federal de Sergipe - UFS - Bacharelado em Estat√≠stica - 2019/2024

## CURSOS E EXPERI√äNCIAS ADICIONAIS
‚Ä¢	TCC - An√°lise Comparativa Entre Modelos De Previs√£o ARMA-GARCH e Redes Neurais LSTM: Um Estudo de Caso Aplicado ao BOVA11
‚Ä¢	Forma√ß√£o - Power BI - Data University Cencosud
‚Ä¢	Curso - Data Warehouse Week - Xperium
‚Ä¢	Curso - Data Expert: Al√©m do B√°sico - Xperium
‚Ä¢	Curso - Master Power BI De A √† Z - Udemy 
‚Ä¢	Curso - Microsoft Excel 2016 Avan√ßado - Funda√ß√£o Bradesco
‚Ä¢	Curso - Introdu√ß√£o √† programa√ß√£o com python - Digital Innovation One Inc. 
‚Ä¢	Curso - SQL SERVER Criando suas primeiras consultas - Digital Innovation One Inc.
‚Ä¢	Forma√ß√£o - Consultas com Oracle Database - Alura
‚Ä¢	Curso - An√°lise de Dados em Linguagem R - Enap 
‚Ä¢	Curso - An√°lise de Dados como Suporte a Tomada de Decis√£o - Enap 
‚Ä¢	Curso - Construindo Aplica√ß√µes Web com R Utilizando o Pacote Shiny - UFS
‚Ä¢	Curso - Organiza√ß√£o Apresenta√ß√£o e Tratamento de Dados Cient√≠ficos - UFS


## PRINCIPAIS HABILIDADES
‚Ä¢	R Core Team 
‚Ä¢	Python
‚Ä¢	SQL Server
‚Ä¢	Power BI
‚Ä¢	QlickView,
‚Ä¢	Pentaho Data Integration
‚Ä¢	Figma
‚Ä¢	Excel
‚Ä¢	Power Point
‚Ä¢	Power Automate
‚Ä¢	Microsoft Forms

## PRINCIPAIS PROJETOS DESENVOLVIDOS
* Dashboard Power BI: 
1   Acompanhando a performance comercial em tempo real! üìäüöÄ Este painel compara o faturamento realizado com as metas estabelecidas, trazendo insights sobre evolu√ß√£o mensal, desempenho por produto e ranking de vendedores. Al√©m disso, destaca ticket m√©dio, notas emitidas e proje√ß√µes de forecast para o fechamento anual. üíº‚ú®
2   Analisando o futuro financeiro com precis√£o! üìà‚ú® Este painel compara o poder da intelig√™ncia artificial, representada por uma rede neural LSTM, e da estat√≠stica, atrav√©s do modelo GARCH, para prever a cota√ß√£o do BOVA11. Utilizamos R e Python para treinar os modelos e o Power BI para visualizar os resultados. A jun√ß√£o perfeita de tecnologia e an√°lise de dados. üíπü§ñ
3   Controlando as finan√ßas pessoais com clareza e intelig√™ncia! üí∞üìä Este painel acompanha a carteira ao longo do tempo, destacando receitas, despesas e a m√©dia mensal, al√©m de detalhar a varia√ß√£o do saldo acumulado. Tamb√©m traz insights sobre despesas por categoria, distribui√ß√£o das transa√ß√µes e comparativos entre metas e valores realizados. Oferece uma vis√£o completa para tomada de decis√µes financeiras mais conscientes e estrat√©gicas. üìâ‚ú®


* Dashboard Streamlit: 
1    üìà‚ú® Este painel interativo, desenvolvido com Streamlit, oferece uma an√°lise aprofundada do desempenho de qualquer a√ß√£o de sua escolha. Digite o ticker desejado para explorar dados hist√≥ricos, visualizar gr√°ficos de pre√ßos e acompanhar as previs√µes geradas pelo modelo ARMA-GARCH. Uma ferramenta poderosa e flex√≠vel para suas an√°lises e proje√ß√µes no mercado financeiro. üíπüíª

* Web Site: 
1    Desenvolvimento de Web Site com Portifolio em dados Utilizando o Back-End com Python biblioteca Flask, e para o Front-End Utilizando HTML, CSS e Java Script. Sendo esse portifolio que voc√™ esta navengando.

* Analises de Risco de Cr√©dito 
1    Constru√ß√£o e manuten√ß√£o da modelagem de dados da carteira de cr√©dito em SQL Server
2    Contru√ß√£o de Modelos de Probabilidade de Inadimpl√™ncia
3    Adequan√ß√£o a nova Norma CMN 4.966/21 com modelagem esatistica de PE = PD x LGD x EAD
4    Valida√ß√£o de Modelos Credit Score de Bureaux de cr√©dito para escolher a melhor empresa que presta este servi√ßo

* Estatistica
1   Todos os Tipos de Amostragem: Amostragem Simples, Amostragem Estratificada, Amostrage Por Conglomerado
2   Modelos de Serie Temoral: SARIMA, ACF, PACF, Rede Neural Netework, Rede Neural LSTM
3   Modelos de Regre√ß√£o Linear: Regress√£o Multipla, Regress√£o Logistica, Regress√£o de Poison
4   Analise Multivariada: PCA, K-mens, Agrupamentos 
5   Controle Estat√≠stico de Qualidade
6   Econometria 

"""

# 4. O "C√âREBRO" DO CHATBOT (O ENDPOINT)
# O @app.route √© o equivalente ao app.post() do Express
@app.route("/api/chat", methods=["POST"])
def chat():
    try:
        # Pega a mensagem do JSON enviado pelo front-end
        user_message = request.json['message']

        # Monta o prompt com a personalidade e os dados
        prompt = f"""
        Voc√™ √© a 'Puxa Saco', uma assistente virtual especialista no perfil profissional de Lucas.
        Sua tarefa √© responder perguntas usando as informa√ß√µes fornecidas abaixo.
        Seja amig√°vel, engra√ßada, um pouco "puxa-saco" (bajuladora), n√£o muito, de forma profissional, e precisa.
        N√£o invente informa√ß√µes que n√£o est√£o no texto. Se a pergunta for sobre algo que n√£o est√° nos dados, responda que voc√™ n√£o tem essa informa√ß√£o
        
        --- DADOS PARA CONSULTA ---
        {dados_linkedin}
        --- FIM DOS DADOS ---

        Usu√°rio: "{user_message}"
        
        Puxa Saco:"""

        # Envia o prompt para o Gemini e obt√©m a resposta
        # response = model.generate_content(prompt)
        response = client.models.generate_content(
            model='gemini-2.0-flash',
            contents=prompt
        )
        bot_reply = response.text

        # Retorna a resposta no formato JSON que o front-end espera
        return jsonify({"reply": bot_reply})

    except Exception as e:
        print(f"Erro: {e}")
        return jsonify({"error": "Desculpe, o Puxa Saco est√° em manuten√ß√£o no momento."}), 500

